import { useEffect, useState } from "react";
import StandarHeader from "./components/StandarHeader";
import BgOrangeTop from "./components/bg-orange-top";

const audnLogo = (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="105"
    height="105"
    viewBox="0 0 105 105"
    fill="none"
  >
    <path
      d="M61.3273 52.4965C61.3273 57.9518 57.8368 63.4174 51.4514 63.4174C45.0696 63.4174 41.2307 57.9518 41.2307 52.4965C41.2307 47.0448 45.0696 41.5791 51.4514 41.5791C57.8368 41.5791 61.3273 47.0448 61.3273 52.4965ZM91.9965 40.6879V92H52.5H40.6879C27.0533 91.9965 13 77.9432 13 64.3121V13H52.5H64.3121C77.9432 13 91.9965 27.0533 91.9965 40.6879ZM71.5515 32.7483C68.3188 32.7483 65.4518 34.2984 63.6508 36.6951C60.3484 34.2183 56.2448 32.7483 51.7998 32.7483C40.8928 32.7483 32.0515 41.5895 32.0515 52.4965C32.0515 63.4035 40.8928 72.2483 51.7998 72.2483C56.2448 72.2483 60.3484 70.7782 63.6508 68.2979C63.9295 68.6707 64.2361 69.0225 64.567 69.3534C66.3541 71.144 68.8239 72.2483 71.5515 72.2483V32.7483Z"
      fill="#262626"
    />
  </svg>
);
const verifyLogo = (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
  >
    <path
      d="M21.1406 12L22.5938 13.8164C22.7344 13.9961 22.8438 14.1914 22.9219 14.4023C23 14.6133 23.0391 14.8359 23.0391 15.0703C23.0391 15.3047 23.0039 15.5273 22.9336 15.7383C22.8633 15.9492 22.7617 16.1406 22.6289 16.3125C22.4961 16.4844 22.3359 16.6328 22.1484 16.7578C21.9609 16.8828 21.7578 16.9766 21.5391 17.0391L19.3008 17.6602C19.3164 18.0586 19.3359 18.4609 19.3594 18.8672C19.3828 19.2734 19.3984 19.6797 19.4062 20.0859C19.4062 20.3672 19.3555 20.6289 19.2539 20.8711C19.1523 21.1133 19.0078 21.3242 18.8203 21.5039C18.6328 21.6836 18.418 21.8281 18.1758 21.9375C17.9336 22.0469 17.668 22.1016 17.3789 22.1016C17.1367 22.1016 16.8984 22.0586 16.6641 21.9727L14.4961 21.1523L13.2188 23.0859C13.0312 23.375 12.7891 23.5977 12.4922 23.7539C12.1953 23.9102 11.8711 23.9922 11.5195 24C11.1758 24 10.8555 23.9219 10.5586 23.7656C10.2617 23.6094 10.0156 23.3828 9.82031 23.0859L8.54297 21.1523L6.375 21.9727C6.14062 22.0586 5.90234 22.1016 5.66016 22.1016C5.37891 22.1016 5.11719 22.0508 4.875 21.9492C4.63281 21.8477 4.41797 21.7031 4.23047 21.5156C4.04297 21.3281 3.89844 21.1133 3.79688 20.8711C3.69531 20.6289 3.64062 20.3672 3.63281 20.0859C3.63281 19.6797 3.64453 19.2734 3.66797 18.8672C3.69141 18.4609 3.71484 18.0586 3.73828 17.6602L1.5 17.0391C1.27344 16.9766 1.07031 16.8828 0.890625 16.7578C0.710938 16.6328 0.554688 16.4844 0.421875 16.3125C0.289062 16.1406 0.1875 15.9492 0.117188 15.7383C0.046875 15.5273 0.0078125 15.3047 0 15.0703C0 14.8438 0.0390625 14.625 0.117188 14.4141C0.195312 14.2031 0.304688 14.0039 0.445312 13.8164L1.89844 12L0.445312 10.1836C0.148438 9.81641 0 9.39844 0 8.92969C0 8.69531 0.0351562 8.47266 0.105469 8.26172C0.175781 8.05078 0.277344 7.85938 0.410156 7.6875C0.542969 7.51562 0.699219 7.36719 0.878906 7.24219C1.05859 7.11719 1.26562 7.02344 1.5 6.96094L3.73828 6.33984C3.72266 5.94141 3.70312 5.53906 3.67969 5.13281C3.65625 4.72656 3.64062 4.32031 3.63281 3.91406C3.63281 3.63281 3.68359 3.37109 3.78516 3.12891C3.88672 2.88672 4.03125 2.67578 4.21875 2.49609C4.40625 2.31641 4.62109 2.17188 4.86328 2.0625C5.10547 1.95312 5.37109 1.89844 5.66016 1.89844C5.90234 1.89844 6.14062 1.94141 6.375 2.02734L8.54297 2.84766L9.82031 0.914062C10.0078 0.625 10.25 0.402344 10.5469 0.246094C10.8438 0.0898438 11.168 0.0078125 11.5195 0C11.8633 0 12.1836 0.078125 12.4805 0.234375C12.7773 0.390625 13.0234 0.617188 13.2188 0.914062L14.4961 2.84766L16.6641 2.02734C16.8984 1.94141 17.1367 1.89844 17.3789 1.89844C17.6602 1.89844 17.9219 1.94922 18.1641 2.05078C18.4062 2.15234 18.6211 2.29688 18.8086 2.48438C18.9961 2.67188 19.1406 2.88672 19.2422 3.12891C19.3438 3.37109 19.3984 3.63281 19.4062 3.91406C19.4062 4.32031 19.3945 4.72656 19.3711 5.13281C19.3477 5.53906 19.3242 5.94141 19.3008 6.33984L21.5391 6.96094C21.7578 7.02344 21.9609 7.11719 22.1484 7.24219C22.3359 7.36719 22.4922 7.51562 22.6172 7.6875C22.7422 7.85938 22.8438 8.05078 22.9219 8.26172C23 8.47266 23.0391 8.69531 23.0391 8.92969C23.0391 9.39844 22.8906 9.81641 22.5938 10.1836L21.1406 12ZM10.0195 16.3242L16.6875 9.66797L15.3516 8.33203L10.0195 13.6758L7.6875 11.332L6.35156 12.668L10.0195 16.3242Z"
      fill="#49ADF4"
    />
  </svg>
);
const shareIcon = (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="17"
    height="17"
    viewBox="0 0 17 17"
    fill="none"
  >
    <path
      d="M13.2245 11.1769C12.6913 11.1769 12.1993 11.3639 11.814 11.6764L7.93777 8.87211C8.00268 8.51585 8.00268 8.15081 7.93777 7.79455L11.814 4.9903C12.1993 5.30272 12.6913 5.48979 13.2245 5.48979C14.4629 5.48979 15.4694 4.48333 15.4694 3.24489C15.4694 2.00646 14.4629 0.999996 13.2245 0.999996C11.9861 0.999996 10.9796 2.00646 10.9796 3.24489C10.9796 3.4619 11.0095 3.66955 11.0675 3.86785L7.3859 6.53367C6.83964 5.80969 5.97161 5.34013 4.99321 5.34013C3.33947 5.34013 2.00002 6.67959 2.00002 8.33333C2.00002 9.98707 3.33947 11.3265 4.99321 11.3265C5.97161 11.3265 6.83964 10.857 7.3859 10.133L11.0675 12.7988C11.0095 12.9971 10.9796 13.2066 10.9796 13.4218C10.9796 14.6602 11.9861 15.6667 13.2245 15.6667C14.4629 15.6667 15.4694 14.6602 15.4694 13.4218C15.4694 12.1833 14.4629 11.1769 13.2245 11.1769ZM13.2245 2.27211C13.7614 2.27211 14.1973 2.70799 14.1973 3.24489C14.1973 3.7818 13.7614 4.21768 13.2245 4.21768C12.6876 4.21768 12.2517 3.7818 12.2517 3.24489C12.2517 2.70799 12.6876 2.27211 13.2245 2.27211ZM4.99321 9.97959C4.0859 9.97959 3.34695 9.24064 3.34695 8.33333C3.34695 7.42602 4.0859 6.68707 4.99321 6.68707C5.90053 6.68707 6.63947 7.42602 6.63947 8.33333C6.63947 9.24064 5.90053 9.97959 4.99321 9.97959ZM13.2245 14.3946C12.6876 14.3946 12.2517 13.9587 12.2517 13.4218C12.2517 12.8849 12.6876 12.449 13.2245 12.449C13.7614 12.449 14.1973 12.8849 14.1973 13.4218C14.1973 13.9587 13.7614 14.3946 13.2245 14.3946Z"
      fill="#26262E"
    />
  </svg>
);
const timeIcon = (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="15"
    height="15"
    viewBox="0 0 15 15"
    fill="none"
  >
    <path
      d="M8.48152 7.00741L10.5186 9.04445C10.6679 9.19383 10.7426 9.38395 10.7426 9.61481C10.7426 9.84568 10.6679 10.0358 10.5186 10.1852C10.3692 10.3346 10.1791 10.4093 9.94819 10.4093C9.71732 10.4093 9.5272 10.3346 9.37782 10.1852L7.09634 7.9037C7.01486 7.82222 6.95374 7.73042 6.913 7.6283C6.87226 7.52672 6.85189 7.42161 6.85189 7.31296V4.07407C6.85189 3.84321 6.93011 3.64956 7.08656 3.49311C7.24246 3.33721 7.43584 3.25926 7.66671 3.25926C7.89757 3.25926 8.09123 3.33721 8.24767 3.49311C8.40357 3.64956 8.48152 3.84321 8.48152 4.07407V7.00741ZM7.66671 14.6667C6.0235 14.6667 4.55004 14.181 3.24634 13.2098C1.94263 12.2391 1.06671 10.9728 0.618559 9.41111C0.550658 9.16667 0.574559 8.9358 0.690263 8.71852C0.805423 8.50123 0.985226 8.36543 1.22967 8.31111C1.46053 8.25679 1.66777 8.30758 1.85137 8.46348C2.03444 8.61993 2.15992 8.81358 2.22782 9.04445C2.5809 10.2395 3.26345 11.2037 4.27545 11.937C5.2869 12.6704 6.41732 13.037 7.66671 13.037C9.2556 13.037 10.6033 12.4835 11.7098 11.3764C12.8169 10.2699 13.3704 8.92222 13.3704 7.33333C13.3704 5.74444 12.8169 4.39647 11.7098 3.28941C10.6033 2.18289 9.2556 1.62963 7.66671 1.62963C6.72967 1.62963 5.85374 1.84691 5.03893 2.28148C4.22411 2.71605 3.53831 3.31358 2.98152 4.07407H4.40745C4.63831 4.07407 4.83197 4.15202 4.98841 4.30793C5.14431 4.46437 5.22226 4.65802 5.22226 4.88889C5.22226 5.11975 5.14431 5.31314 4.98841 5.46904C4.83197 5.62548 4.63831 5.7037 4.40745 5.7037H1.14819C0.917325 5.7037 0.723942 5.62548 0.568041 5.46904C0.411596 5.31314 0.333374 5.11975 0.333374 4.88889V1.62963C0.333374 1.39877 0.411596 1.20511 0.568041 1.04867C0.723942 0.892766 0.917325 0.814815 1.14819 0.814815C1.37905 0.814815 1.57271 0.892766 1.72915 1.04867C1.88505 1.20511 1.963 1.39877 1.963 1.62963V2.72963C2.6556 1.86049 3.5011 1.18827 4.49952 0.712963C5.4974 0.237654 6.55313 0 7.66671 0C8.68523 0 9.63937 0.193383 10.5292 0.580148C11.4184 0.967457 12.1925 1.4903 12.8514 2.14867C13.5097 2.80758 14.0326 3.58165 14.4199 4.47089C14.8067 5.36067 15 6.31481 15 7.33333C15 8.35185 14.8067 9.30573 14.4199 10.195C14.0326 11.0847 13.5097 11.8588 12.8514 12.5172C12.1925 13.1761 11.4184 13.6992 10.5292 14.0865C9.63937 14.4733 8.68523 14.6667 7.66671 14.6667Z"
      fill="#26262E"
    />
  </svg>
);
function DetailedPlaylist() {
  const [songs, setSongs] = useState([]);

  useEffect(() => {
    fetch("http://localhost:3000/app/songs")
      .then((response) => response.json())
      .then((data) => setSongs(data));
  }, []);

  return (
    <main className="w-screen h-screen max-w-md max-h-min m-auto relative">
      <BgOrangeTop />
      <StandarHeader text={"Playlist Generada"} />

      <section className=" grid grid-cols-2 grid-rows-2 w-[62%] h-[30%] absolute top-28 left-0 right-0 m-auto ">
        <img
          className="w-full h-full row-span-1 "
          src={songs[0]?.image}
          alt=""
        />
        <img
          className="w-full h-full  row-span-1 rounded-tr-3xl "
          src={songs[1]?.image}
          alt=""
        />
        <img
          className="w-full h-full  row-span-1 rounded-bl-3xl"
          src={songs[2]?.image}
          alt=""
        />
        <img
          className="w-full h-full  row-span-1  "
          src={songs[3]?.image}
          alt=""
        />
      </section>
      <div></div>
    </main>
  );
}

export default DetailedPlaylist;
